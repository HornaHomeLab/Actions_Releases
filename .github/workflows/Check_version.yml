name: Check version

on:
  workflow_call:
    outputs:
      version_tag:
        description: "Version tag retrieved from README.md"
        value: ${{ jobs.Check.outputs.version_tag }}
      release_id:
        description: "Bool if tag already exist or not"
        value: ${{ jobs.Check.outputs.release_id }}

env:
  success_ico: ":heavy_check_mark:"
  failure_ico: ":x:"
  cancel_ico: ":no_entry_sign:"

jobs:
  Check:
    runs-on: container
    outputs:
      version_tag: ${{ steps.file.outputs.tag_name }}
      release_id: ${{ steps.release.outputs.release_id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Tag
        id: file
        run: |
          tag=$(grep '##### version:' './README.md' | awk -F: '{print $2}' | tr -d '[:blank:]')

          if [ -z "$tag" ]; then
            echo "Can not find verion in ./README.md"
            echo "${{ env.failure_ico }} Cannot find version in ./README.md ${{ env.failure_ico }}" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

          echo "tag_name=$tag" >> $GITHUB_OUTPUT

      - name: Check release
        id: release
        run: |
          release_details=$(
            curl -L -s --fail-with-body \
              -X GET \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              --url https://api.github.com/repos/${{ github.repository }}/releases/tags/$version
          )
          release_id=$(echo "$release_details" | jq .id)
          pre_release=$(echo "$release_details" | jq .prerelease)

          if [ "$pre_release" == "false" ]; then
            echo "Can not modify Full Release"
            echo "${{ env.failure_ico }} Can not modify Full Release ($version) ${{ env.failure_ico }}" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

          echo "release_id=$release_id" >> $GITHUB_OUTPUT
